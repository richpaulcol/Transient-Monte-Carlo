[0;31mSignature:[0m [0msubplots[0m[0;34m([0m[0mnrows[0m[0;34m=[0m[0;36m1[0m[0;34m,[0m [0mncols[0m[0;34m=[0m[0;36m1[0m[0;34m,[0m [0msharex[0m[0;34m=[0m[0mFalse[0m[0;34m,[0m [0msharey[0m[0;34m=[0m[0mFalse[0m[0;34m,[0m [0msqueeze[0m[0;34m=[0m[0mTrue[0m[0;34m,[0m [0msubplot_kw[0m[0;34m=[0m[0mNone[0m[0;34m,[0m [0mgridspec_kw[0m[0;34m=[0m[0mNone[0m[0;34m,[0m [0;34m**[0m[0mfig_kw[0m[0;34m)[0m[0;34m[0m[0m
[0;31mDocstring:[0m
Create a figure and a set of subplots

This utility wrapper makes it convenient to create common layouts of
subplots, including the enclosing figure object, in a single call.

Parameters
----------
nrows, ncols : int, optional, default: 1
    Number of rows/columns of the subplot grid.

sharex, sharey : bool or {'none', 'all', 'row', 'col'}, default: False
    Controls sharing of properties among x (`sharex`) or y (`sharey`)
    axes:

        - True or 'all': x- or y-axis will be shared among all
          subplots.
        - False or 'none': each subplot x- or y-axis will be
          independent.
        - 'row': each subplot row will share an x- or y-axis.
        - 'col': each subplot column will share an x- or y-axis.

    When subplots have a shared x-axis along a column, only the x tick
    labels of the bottom subplot are visible.  Similarly, when subplots
    have a shared y-axis along a row, only the y tick labels of the first
    column subplot are visible.

squeeze : bool, optional, default: True
    - If True, extra dimensions are squeezed out from the returned Axes
      object:

        - if only one subplot is constructed (nrows=ncols=1), the
          resulting single Axes object is returned as a scalar.
        - for Nx1 or 1xN subplots, the returned object is a 1D numpy
          object array of Axes objects are returned as numpy 1D arrays.
        - for NxM, subplots with N>1 and M>1 are returned as a 2D arrays.

    - If False, no squeezing at all is done: the returned Axes object is
      always a 2D array containing Axes instances, even if it ends up
      being 1x1.

subplot_kw : dict, optional
    Dict with keywords passed to the
    :meth:`~matplotlib.figure.Figure.add_subplot` call used to create each
    subplot.

gridspec_kw : dict, optional
    Dict with keywords passed to the
    :class:`~matplotlib.gridspec.GridSpec` constructor used to create the
    grid the subplots are placed on.

**fig_kw :
    All additional keyword arguments are passed to the :func:`figure` call.

Returns
-------
fig : :class:`matplotlib.figure.Figure` object

ax : Axes object or array of Axes objects.

    ax can be either a single :class:`matplotlib.axes.Axes` object or an
    array of Axes objects if more than one subplot was created.  The
    dimensions of the resulting array can be controlled with the squeeze
    keyword, see above.

Examples
--------
First create some toy data:

>>> x = np.linspace(0, 2*np.pi, 400)
>>> y = np.sin(x**2)

Creates just a figure and only one subplot

>>> fig, ax = plt.subplots()
>>> ax.plot(x, y)
>>> ax.set_title('Simple plot')

Creates two subplots and unpacks the output array immediately

>>> f, (ax1, ax2) = plt.subplots(1, 2, sharey=True)
>>> ax1.plot(x, y)
>>> ax1.set_title('Sharing Y axis')
>>> ax2.scatter(x, y)

Creates four polar axes, and accesses them through the returned array

>>> fig, axes = plt.subplots(2, 2, subplot_kw=dict(polar=True))
>>> axes[0, 0].plot(x, y)
>>> axes[1, 1].scatter(x, y)

Share a X axis with each column of subplots

>>> plt.subplots(2, 2, sharex='col')

Share a Y axis with each row of subplots

>>> plt.subplots(2, 2, sharey='row')

Share both X and Y axes with all subplots

>>> plt.subplots(2, 2, sharex='all', sharey='all')

Note that this is the same as

>>> plt.subplots(2, 2, sharex=True, sharey=True)

See Also
--------
figure
subplot
[0;31mFile:[0m      ~/Installed_Programmes/miniconda/lib/python2.7/site-packages/matplotlib/pyplot.py
[0;31mType:[0m      function
